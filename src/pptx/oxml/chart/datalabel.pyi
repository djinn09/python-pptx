from typing import Optional, List
from pptx.enum.chart import XL_DATA_LABEL_POSITION
from pptx.oxml.xmlchemy import BaseOxmlElement, OneAndOnlyOne, ZeroOrMore, ZeroOrOne

class CT_DLbl(BaseOxmlElement):
    idx: BaseOxmlElement
    tx: Optional[BaseOxmlElement]
    spPr: Optional[BaseOxmlElement]
    txPr: Optional[BaseOxmlElement]
    dLblPos: Optional["CT_DLblPos"]
    def get_or_add_rich(self) -> BaseOxmlElement: ...
    def get_or_add_tx_rich(self) -> BaseOxmlElement: ...
    @property
    def idx_val(self) -> int: ...
    @classmethod
    def new_dLbl(cls) -> "CT_DLbl": ...
    def remove_tx_rich(self) -> None: ...
    def _new_txPr(self) -> BaseOxmlElement: ...

class CT_DLblPos(BaseOxmlElement):
    val: XL_DATA_LABEL_POSITION

class CT_DLbls(BaseOxmlElement):
    dLbl: List[CT_DLbl]
    numFmt: Optional[BaseOxmlElement]
    txPr: Optional[BaseOxmlElement]
    dLblPos: Optional[CT_DLblPos]
    showLegendKey: Optional[BaseOxmlElement]
    showVal: Optional[BaseOxmlElement]
    showCatName: Optional[BaseOxmlElement]
    showSerName: Optional[BaseOxmlElement]
    showPercent: Optional[BaseOxmlElement]
    @property
    def defRPr(self) -> BaseOxmlElement: ...
    def get_dLbl_for_point(self, idx: int) -> Optional[CT_DLbl]: ...
    def get_or_add_dLbl_for_point(self, idx: int) -> CT_DLbl: ...
    @classmethod
    def new_dLbls(cls) -> "CT_DLbls": ...
    def _insert_dLbl_in_sequence(self, idx: int) -> CT_DLbl: ...
    def _new_dLbl(self) -> CT_DLbl: ...
    def _new_showCatName(self) -> BaseOxmlElement: ...
    def _new_showLegendKey(self) -> BaseOxmlElement: ...
    def _new_showPercent(self) -> BaseOxmlElement: ...
    def _new_showSerName(self) -> BaseOxmlElement: ...
    def _new_showVal(self) -> BaseOxmlElement: ...
    def _new_txPr(self) -> BaseOxmlElement: ...
