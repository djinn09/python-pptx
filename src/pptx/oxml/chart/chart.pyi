from typing import Iterator, List, Optional, Tuple
from pptx.oxml.chart.shared import CT_Title
from pptx.oxml.simpletypes import ST_Style
from pptx.oxml.xmlchemy import BaseOxmlElement, OneAndOnlyOne, ZeroOrOne

class CT_Chart(BaseOxmlElement):
    title: Optional[CT_Title]
    autoTitleDeleted: Optional[BaseOxmlElement]
    plotArea: "CT_PlotArea"
    legend: Optional[BaseOxmlElement]
    rId: str
    @property
    def has_legend(self) -> bool: ...
    @has_legend.setter
    def has_legend(self, bool_value: bool) -> None: ...
    @staticmethod
    def new_chart(rId: str) -> "CT_Chart": ...
    def _new_title(self) -> CT_Title: ...

class CT_ChartSpace(BaseOxmlElement):
    date1904: Optional[BaseOxmlElement]
    style: Optional["CT_Style"]
    chart: CT_Chart
    txPr: Optional[BaseOxmlElement]
    externalData: Optional["CT_ExternalData"]
    @property
    def catAx_lst(self) -> List[BaseOxmlElement]: ...
    @property
    def date_1904(self) -> bool: ...
    @property
    def dateAx_lst(self) -> List[BaseOxmlElement]: ...
    def get_or_add_title(self) -> CT_Title: ...
    @property
    def plotArea(self) -> "CT_PlotArea": ...
    @property
    def valAx_lst(self) -> List[BaseOxmlElement]: ...
    @property
    def xlsx_part_rId(self) -> Optional[str]: ...
    def _add_externalData(self) -> "CT_ExternalData": ...
    def _new_txPr(self) -> BaseOxmlElement: ...

class CT_ExternalData(BaseOxmlElement):
    autoUpdate: Optional[BaseOxmlElement]
    rId: str

class CT_PlotArea(BaseOxmlElement):
    catAx: List[BaseOxmlElement]
    valAx: List[BaseOxmlElement]
    def iter_sers(self) -> Iterator[BaseOxmlElement]: ...
    def iter_xCharts(self) -> Iterator[BaseOxmlElement]: ...
    @property
    def last_ser(self) -> Optional[BaseOxmlElement]: ...
    @property
    def next_idx(self) -> int: ...
    @property
    def next_order(self) -> int: ...
    @property
    def sers(self) -> Tuple[BaseOxmlElement, ...]: ...
    @property
    def xCharts(self) -> Tuple[BaseOxmlElement, ...]: ...

class CT_Style(BaseOxmlElement):
    val: ST_Style
