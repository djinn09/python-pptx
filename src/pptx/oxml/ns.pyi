from typing import Dict

_nsmap: Dict[str, str]
pfxmap: Dict[str, str]

class NamespacePrefixedTag(str):
    def __new__(cls, nstag: str) -> "NamespacePrefixedTag": ...
    def __init__(self, nstag: str) -> None: ...
    @classmethod
    def from_clark_name(cls, clark_name: str) -> "NamespacePrefixedTag": ...
    @property
    def clark_name(self) -> str: ...
    @property
    def local_part(self) -> str: ...
    @property
    def nsmap(self) -> Dict[str, str]: ...
    @property
    def nspfx(self) -> str: ...
    @property
    def nsuri(self) -> str: ...

def namespaces(*prefixes: str) -> Dict[str, str]: ...
nsmap: namespaces

def nsdecls(*prefixes: str) -> str: ...
def nsuri(nspfx: str) -> str: ...
def qn(namespace_prefixed_tag: str) -> str: ...
